import{Component,Node,director}from"cc";var KitStatus,PlayStatus,SysStatus,TaskStatu,GameStatu;!function(t){t[t.Nil=0]="Nil",t[t.Initing=1]="Initing",t[t.Inited=2]="Inited",t[t.Running=3]="Running",t[t.Disposed=4]="Disposed"}(KitStatus||(KitStatus={}));class KitBase extends Component{constructor(){super(...arguments),this._status=KitStatus.Nil}get status(){return this._status}sign(t){this._game=t}Init(t){this._status=KitStatus.Initing,console.log(this.kitName,"Init"),this.OnInit(()=>{this._status=KitStatus.Inited,t()})}LateInit(t){console.log(this.kitName,"LateInit"),this.OnLateInit(()=>{this._status=KitStatus.Running,t()},this._game.kit.bind(this._game))}Dispose(){console.log(this.kitName,"Dispose"),this._status=KitStatus.Disposed}sys(t){return this._game.sys(t)}}!function(t){t[t.Nil=0]="Nil",t[t.Initing=1]="Initing",t[t.Inited=2]="Inited",t[t.Running=3]="Running",t[t.Disposed=4]="Disposed"}(PlayStatus||(PlayStatus={}));class PlayBase extends Component{constructor(){super(...arguments),this._status=PlayStatus.Nil}get status(){return this._status}sign(t){this._game=t}Init(t){this._status=PlayStatus.Initing,console.log(this.playName,"Init"),this.OnInit(()=>{this._status=PlayStatus.Inited,t()})}LateInit(t){console.log(this.playName,"LateInit"),this.OnLateInit(()=>{this._status=PlayStatus.Running,t()},this._game.play.bind(this._game))}Dispose(){console.log(this.playName,"Dispose"),this._status=PlayStatus.Disposed}sys(t){return this._game.sys(t)}kit(t){return this._game.kit(t)}}!function(t){t[t.Nil=0]="Nil",t[t.Initing=1]="Initing",t[t.Inited=2]="Inited",t[t.Running=3]="Running",t[t.Disposed=4]="Disposed"}(SysStatus||(SysStatus={}));class SysBase extends Component{constructor(){super(...arguments),this._status=SysStatus.Nil}get status(){return this._status}sign(t){this._game=t}Init(t){this._status=SysStatus.Initing,console.log(this.sysName,"Init"),this.OnInit(()=>{this._status=SysStatus.Inited,t()})}LateInit(t){console.log(this.sysName,"LateInit"),this.OnLateInit(()=>{this._status=SysStatus.Running,t()},this._game.sys.bind(this._game))}Dispose(){console.log(this.sysName,"Dispose"),this._status=SysStatus.Disposed}}!function(t){t[t.Idle=0]="Idle",t[t.Pending=1]="Pending",t[t.Stop=2]="Stop",t[t.Fulfilled=3]="Fulfilled"}(TaskStatu||(TaskStatu={}));class AsyncTask{constructor(){this.statu=TaskStatu.Idle,this.m_quene=new Array}Then(t){if(t instanceof Array){let s=t.length+1;this.m_quene.push(i=>{let n=()=>{s--,s<1&&i()};t.forEach(t=>{t(n)}),n()})}else this.m_quene.push(t)}Start(t){this.m_onEnd=t,this.statu==TaskStatu.Idle&&(this.statu=TaskStatu.Pending,this._Next())}Stop(){this.statu==TaskStatu.Pending&&(this.statu=TaskStatu.Stop)}_Next(){this.statu==TaskStatu.Pending&&(this.m_quene.length>0?this.m_quene.shift()(this._Next.bind(this)):(this.m_onEnd(),this.m_onEnd=null,this.statu=TaskStatu.Fulfilled))}}!function(t){t[t.Idle=0]="Idle",t[t.Loaded=1]="Loaded",t[t.InitingSys=2]="InitingSys",t[t.InitingKit=3]="InitingKit",t[t.InitingPlay=4]="InitingPlay",t[t.Running=5]="Running"}(GameStatu||(GameStatu={}));class SKPGame extends Component{constructor(){super(...arguments),this._statu=GameStatu.Idle,this._sysList=[],this._kitList=[],this._playList=[]}static get me(){return SKPGame._me}get statu(){return this._statu}onLoad(){console.log(this.gamename,"onLoad"),SKPGame.me?console.warn("不允许多个Game同时存在，请先删除现有Game",SKPGame.me.name):(SKPGame._me=this,this._sysRoot=new Node("SYS_ROOT"),this._kitRoot=new Node("KIT_ROOT"),this._playRoot=new Node("PLAY_ROOT"),this._kitRoot.setParent(this.node),this._sysRoot.setParent(this.node),this._playRoot.setParent(this.node),director.addPersistRootNode(this.node),this.OnAddSys(this._addSys.bind(this)),this.OnAddKit(this._addKit.bind(this)),this.OnAddPlay(this._addPlay.bind(this)),this._statu=GameStatu.Loaded)}sys(t){return this._sysRoot.getComponentInChildren(t)}_addSys(t){const s=new Node(t.name);s.setParent(this._sysRoot);const i=s.addComponent(t);return this._sysList.push(i),i}kit(t){return this._kitRoot.getComponentInChildren(t)}_addKit(t){const s=new Node(t.name);s.setParent(this._kitRoot);const i=s.addComponent(t);return i.sign(this),this._kitList.push(i),i}play(t){return this._playRoot.getComponentInChildren(t)}_addPlay(t){const s=new Node(t.name);s.setParent(this._playRoot);const i=s.addComponent(t);return i.sign(this),this._playList.push(i),i}addPlay(t,s,i){const n=this._addPlay(t);return n.Init(()=>{null==s||s(),n.LateInit(()=>{null==i||i()})}),n}disposePlay(t){const s=this.play(t);if(s){const t=this._playList.indexOf(s);this._playList.splice(t,1),s.Dispose(),s.node.destroy()}}start(){console.log(this.gamename,"start");const t=new AsyncTask;t.Then(t=>{this._statu=GameStatu.InitingSys,console.time("gameInit"),console.time("sysInit"),t()}),this._sysList.forEach(s=>t.Then(s.Init.bind(s))),this._sysList.forEach(s=>t.Then(s.LateInit.bind(s))),t.Then(t=>{this._statu=GameStatu.InitingKit,console.timeEnd("sysInit"),console.time("kitInit"),t()}),this._kitList.forEach(s=>t.Then(s.Init.bind(s))),this._kitList.forEach(s=>t.Then(s.LateInit.bind(s))),t.Then(t=>{this._statu=GameStatu.InitingPlay,console.timeEnd("kitInit"),console.time("playInit"),t()}),this._playList.forEach(s=>t.Then(s.Init.bind(s))),this._playList.forEach(s=>t.Then(s.LateInit.bind(s))),t.Start(()=>{this._statu=GameStatu.Running,console.timeEnd("playInit"),console.timeEnd("gameInit"),this.OnEnter()})}update(t){}}export{KitBase,PlayBase,SKPGame,SysBase};